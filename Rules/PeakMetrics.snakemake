localrules: peak_summary, merged_peak_summary, makeTempPeakFile, gatherJaccard, plotPeakMetrics
rule calc_frip:
    input: 
        bam = "Results/mapping/{sample}_filtered.bam",
        bai = "Results/mapping/{sample}_filtered.bam.bai",
        peak = "Results/macs2/{sample}_peaks.narrowPeak"
    output:
        metrics = "Results/metrics/FRiP/{sample}_FRiP.txt",
        figure = "Results/figures/FRiP/{sample}_FRiP.png"
    conda: "../envs/deeptools.yaml"
    params: time = "60"
    threads: 12
    shell:
     '''
     plotEnrichment --bamfiles {input.bam} --BED {input.peak} -o {output.figure} --outRawCounts {output.metrics} -e 150 -p {threads}
     '''

rule combined_IDR_frip:
    input:
        bam = expand("Results/mapping/{rep}_{{tissue}}_filtered.bam", rep = reps),
        bai = expand("Results/mapping/{rep}_{{tissue}}_filtered.bam.bai", rep = reps),
        peak = "Results/peaks_IDR/{tissue}/{tissue}.peaks"
    output:
        metrics = "Results/metrics/FRiP/{tissue}_IDR_FRiP.txt",
        figure = "Results/figures/FRiP/{tissue}_IDR_FRiP.png",
    conda: "../envs/deeptools.yaml"
    params: time = "90"
    threads: 12
    shell:
     """
     plotEnrichment --bamfiles {input.bam} --BED {input.peak} -o {output.figure} --outRawCounts {output.metrics} -e 150 -p {threads}
     """

rule makeTempPeakFile:
    input:
        peak = "Results/peaks/{tissue}.concensus.bed",
        pr = "Results/IDR/concensus_peaks/mspc/{tissue}.concensus.bed",
    output:
        peak = temp("Results/peaks/{tissue}.concensus.bed_temp"),
        pr = temp("Results/IDR/concensus_peaks/mspc/{tissue}.concensus.bed_temp")
    shell:
     """
     tail -n+2 {input.peak} > {output.peak}
     tail -n+2 {input.pr} > {output.pr}
     """

rule combined_MSPC_frip:
    input:
        bam = expand("Results/mapping/{rep}_{{tissue}}_filtered.bam", rep = reps),
        bai = expand("Results/mapping/{rep}_{{tissue}}_filtered.bam.bai", rep = reps),
        peak = "Results/peaks/{tissue}.concensus.bed"
    output:
        metrics = "Results/metrics/FRiP/{tissue}_FRiP.txt",
        figure = "Results/figures/FRiP/{tissue}_FRiP.png",
    conda: "../envs/deeptools.yaml"
    params: time = "90"
    threads: 12
    shell:
     """
     plotEnrichment --bamfiles {input.bam} --BED {input.peak}_temp -o {output.figure} --outRawCounts {output.metrics} -e 150 -p {threads}
     """

rule peak_summary:
    input: 
        expand("Results/macs2/{rep}_{tissue}_peaks.narrowPeak", rep = reps, tissue = tissues),
        expand("Results/peaks/{tissue}.concensus.bed_temp", tissue = tissues)
    output: "Results/metrics/peak_summary.tsv"
    params: time = "120", reps = expand("{rep}", rep = reps), tissues = expand("{tissue}", tissue = tissues)
    script: "../tools/Peak_Metrics.py"

rule merged_peak_summary:
    input:
        expand("Results/peaks/{tissue}.concensus.bed_temp", tissue = tissues),
        expand("Results/peaks_IDR/{tissue}/{tissue}.peaks", tissue = tissues),
        expand("Results/metrics/FRiP/{tissue}_IDR_FRiP.txt", tissue = tissues),
        expand("Results/metrics/FRiP/{tissue}_FRiP.txt", tissue = tissues),
        expand("Results/IDR/concensus_peaks/mspc/{tissue}.concensus.bed_temp", tissue = tissues),
        expand("Results/IDR/concensus_peaks/IDR/{tissue}/{tissue}.peaks", tissue = tissues)
    output: "Results/metrics/merged_peak_summary.tsv"
    params: time = "120", reps = expand("{rep}", rep = reps), tissues = expand("{tissue}", tissue = tissues)
    script: "../tools/MergedPeak_Metrics.py"

rule peakJaccard:
    input: 
        repA = expand("Results/macs2/{rep}_{{tissue}}_peaks.narrowPeak", rep = config["reps"][0]),
        repB = expand("Results/macs2/{rep}_{{tissue}}_peaks.narrowPeak", rep = config["reps"][1]),
        IDRpr1 = "Results/IDR/macs2/{tissue}_pr1_peaks.narrowPeak",
        IDRpr2 = "Results/IDR/macs2/{tissue}_pr2_peaks.narrowPeak",
        concensus = "Results/peaks/{tissue}.concensus.bed",
        IDRconcensus = "Results/IDR/concensus_peaks/mspc/{tissue}.concensus.bed"
    output:
        reps = "Results/metrics/jaccard/{tissue}_betweenReps.txt",
        IDRprs = "Results/metrics/jaccard/{tissue}_IDRprs.txt",
        IDRconcensus = "Results/metrics/jaccard/{tissue}_concensus_vs_IDR.txt"
    conda: "../envs/bedtools.yaml"
    params: time = "30"
    shell:
     """
     bedtools jaccard -a {input.repA} -b {input.repB} -f 0.5 -F 0.5 > {output.reps}
     bedtools jaccard -a {input.IDRpr1} -b {input.IDRpr2} -f 0.5 -F 0.5 > {output.IDRprs}
     bedtools jaccard -a {input.concensus} -b {input.IDRconcensus} -f 0.5 -F 0.5 > {output.IDRconcensus}
     """

rule gatherJaccard:
    input: expand("Results/metrics/jaccard/{tissue}_{comp}.txt", tissue = tissues, comp = ["betweenReps", "IDRprs", "concensus_vs_IDR"])
    output: "Results/metrics/Jaccard.txt"
    script: "../tools/gatherjaccard.py"

rule peakFisher:
    input:
        repA = expand("Results/macs2/{rep}_{{tissue}}_peaks.narrowPeak", rep = config["reps"][0]),
        repB = expand("Results/macs2/{rep}_{{tissue}}_peaks.narrowPeak", rep = config["reps"][1]),
        IDRpr1 = "Results/IDR/macs2/{tissue}_pr1_peaks.narrowPeak",
        IDRpr2 = "Results/IDR/macs2/{tissue}_pr2_peaks.narrowPeak",
        concensus = "Results/peaks/{tissue}.concensus.bed",
        IDRconcensus = "Results/IDR/concensus_peaks/mspc/{tissue}.concensus.bed",
        genome = "/home/pengsc/reference/equcab3/chrom_sizes_RefSeq_sorted.txt"
    output:
        reps = "Results/metrics/fisher/{tissue}_betweenReps.txt",
        IDRprs = "Results/metrics/fisher/{tissue}_IDRprs.txt",
        IDRconcensus = "Results/metrics/fisher/{tissue}_concensus_vs_IDR.txt"
    conda: "../envs/bedtools.yaml"
    params: time = "30"
    shell:
     """
     bedtools fisher -a {input.repA} -b {input.repB} -g {input.genome} -f 0.5 -F 0.5 > {output.reps}
     bedtools fisher -a {input.IDRpr1} -b {input.IDRpr2} -g {input.genome} -f 0.5 -F 0.5 > {output.IDRprs}
     bedtools fisher -a {input.concensus} -b {input.IDRconcensus} -g {input.genome} -f 0.5 -F 0.5 > {output.IDRconcensus}
     """

rule peakIntervalStats:
    input:
        repA = expand("Results/macs2/{rep}_{{tissue}}_peaks.narrowPeak", rep = config["reps"][0]),
        repB = expand("Results/macs2/{rep}_{{tissue}}_peaks.narrowPeak", rep = config["reps"][1]),
        IDRpr1 = "Results/IDR/macs2/{tissue}_pr1_peaks.narrowPeak",
        IDRpr2 = "Results/IDR/macs2/{tissue}_pr2_peaks.narrowPeak",
        concensus = "Results/peaks/{tissue}.concensus.bed",
        IDRconcensus = "Results/IDR/concensus_peaks/mspc/{tissue}.concensus.bed",
        genome = "/home/pengsc/reference/equcab3/chroms.bed"
    output:
        reps = "Results/metrics/intervalStats/{tissue}_betweenReps.txt",
        IDRprs = "Results/metrics/intervalStats/{tissue}_IDRprs.txt",
        IDRconcensus = "Results/metrics/intervalStats/{tissue}_concensus_vs_IDR.txt"
    conda: "../envs/bedtools.yaml"
    params: time = "30"
    shell:
     """
     tools/intervalStats/IntervalStats -r {input.repA} -q {input.repB} -d {input.genome} -o {output.reps}
     tools/intervalStats/IntervalStats -r {input.IDRpr1} -q {input.IDRpr2} -d {input.genome} -o {output.IDRprs}
     tools/intervalStats/IntervalStats -r {input.IDRconcensus} -q {input.concensus} -d {input.genome} -o {output.IDRconcensus}
     """

rule plotPeakMetrics:
    input:
        jaccard = "Results/metrics/Jaccard.txt",
        interval = expand("Results/metrics/intervalStats/{tissue}_{comp}.txt", tissue = tissues, comp = ["betweenReps", "IDRprs", "concensus_vs_IDR"])
    output:
        jaccard = "Results/figures/Jaccard_plot_withinTissue.jpg",
        interval = "Results/figures/interval_plot_withinTissue.jpg"
    conda: "../envs/Rplot.yaml"
    script: "../tools/plotPeakMetrics.R"
